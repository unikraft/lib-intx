#  SPDX-License-Identifier: BSD-3-Clause
#
#  intx Makefile.uk
#
#  Authors: Vlad-Andrei Badoiu <vlad_andrei.badoiu@stud.acs.upb.ro>
#
#  Copyright (c) 2019, University Politehnica of Bucharest. All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#  3. Neither the name of the copyright holder nor the names of its
#     contributors may be used to endorse or promote products derived from
#     this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
#  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#  POSSIBILITY OF SUCH DAMAGE.
#

################################################################################
# Library registration
################################################################################
$(eval $(call addlib_s,libintx,$(CONFIG_LIBINTX)))

################################################################################
# Sources
################################################################################
LIBINTX_VERSION=0.10.1
LIBINTX_URL=https://github.com/chfast/intx/archive/v$(LIBINTX_VERSION).tar.gz
LIBINTX_PATCHDIR=$(LIBINTX_BASE)/patches
$(eval $(call fetch,libintx,$(LIBINTX_URL)))

################################################################################
# Helpers
################################################################################
LIBINTX_SUBDIR=intx-$(LIBINTX_VERSION)
LIBINTX_SRC = $(LIBINTX_ORIGIN)/$(LIBINTX_SUBDIR)

################################################################################
# Library includes
################################################################################
CINCLUDES-$(CONFIG_LIBINTX) += -I$(LIBINTX_SRC)/include
CXXINCLUDES-$(CONFIG_LIBINTX) += -I$(LIBINTX_SRC)/include

CINCLUDES-$(CONFIG_LIBINTX) += -I$(LIBINTX_SRC)/lib/intx
CXXINCLUDES-$(CONFIG_LIBINTX) += -I$(LIBINTX_SRC)/lib/intx

ifdef CONFIG_LIBINTX_UNITESTS
CINCLUDES-$(CONFIG_LIBINTX) += -I$(LIBINTX_SRC)/test/unittests
CXXINCLUDES-$(CONFIG_LIBINTX) += -I$(LIBINTX_SRC)/test/unittests

CINCLUDES-$(CONFIG_LIBINTX) += -I$(LIBINTX_SRC)/test/
CXXINCLUDES-$(CONFIG_LIBINTX) += -I$(LIBINTX_SRC)/test/
endif
################################################################################
# Global flags
################################################################################
# Suppressed flags
LIBINTX_SUPPRESS_FLAGS += -Wno-unused-parameter				\
	-Wno-unused-variable -Wno-unused-value -Wno-unused-function 	\
	-Wno-missing-field-initializers -Wno-implicit-fallthrough 	\
	-Wno-cast-function-type -Wno-stringop-truncation 		\
	-Wno-char-subscripts -Wno-sign-compare -Wno-parentheses		\
	-Wno-deprecated-declarations

LIBINTX_CFLAGS-y	+= $(LIBINTX_SUPPRESS_FLAGS) -Wno-pointer-to-int-cast -Wno-int-to-pointer-cast
LIBINTX_CXXFLAGS-y	+= $(LIBINTX_SUPPRESS_FLAGS)

################################################################################
# Library sources
################################################################################
LIBINTX_SRCS-y += $(LIBINTX_SRC)/lib/intx/div.cpp
#LIBINTX_SRCS-y += $(LIBINTX_SRC)/examples/use_cmake_package/use_int128.cpp
#LIBINTX_SRCS-y += $(LIBINTX_SRC)/examples/use_cmake_package/use_intx.cpp
ifdef CONFIG_LIBINTX_UNITESTS
LIBINTX_SRCS-y += $(LIBINTX_SRC)/test/unittests/test_builtins.cpp
LIBINTX_SRCS-y += $(LIBINTX_SRC)/test/unittests/test_intx_api.cpp
LIBINTX_SRCS-y += $(LIBINTX_SRC)/test/unittests/test_intx.cpp
LIBINTX_SRCS-y += $(LIBINTX_SRC)/test/unittests/test_int128.cpp
LIBINTX_SRCS-y += $(LIBINTX_SRC)/test/unittests/test_div.cpp
LIBINTX_SRCS-y += $(LIBINTX_SRC)/test/experimental/div.cpp|test
endif
#LIBINTX_SRCS-y += $(LIBINTX_SRC)/test/fuzzer/fuzz_intx.cpp
#LIBINTX_SRCS-y += $(LIBINTX_SRC)/test/benchmarks/bench_builtins.cpp
#LIBINTX_SRCS-y += $(LIBINTX_SRC)/test/benchmarks/benchmarks.cpp
#LIBINTX_SRCS-y += $(LIBINTX_SRC)/test/benchmarks/bench_div.cpp
#LIBINTX_SRCS-y += $(LIBINTX_SRC)/test/benchmarks/utils.cpp
#LIBINTX_SRCS-y += $(LIBINTX_SRC)/test/benchmarks/bench_int128.cpp
